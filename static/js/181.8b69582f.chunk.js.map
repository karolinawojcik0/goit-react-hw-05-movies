{"version":3,"file":"static/js/181.8b69582f.chunk.js","mappings":"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","sources":["components/Cast/Cast.css.js","components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.css.js","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.css.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastActors = styled.li`\ncolor: #415a77;\n    font-weight: 400;\n    text-decoration: none;\n    display: block;\n    margin-bottom: 5px;`","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { CastActors } from './Cast.css';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n          {\n            params: {\n              api_key: 'ab4b5bd9c7ffd7f3aa53eea7788a929e',\n            },\n          }\n        );\n\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <CastActors key={actor.id}>\n            {actor.name} as {actor.character}\n          </CastActors>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import { Link } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nexport const MovieDetailsContainer = styled.div`\ndisplay: flex;\nalign-items: flex-start;\nwidth: 100%;\nflex-direction: row-reverse\n`\nexport const MovieDetailsInfo = styled.div`\nflex: 1`\n\nexport const MovieTitle = styled.h2`\npadding: 20px;\nline-height: 1.17;\nletter-spacing: 0.03em`\n\nexport const MovieDescription = styled.p`\nwidth: 50%;\npadding: 0 30px;\nfont-size: 18px;\nline-height: 1.17;\nletter-spacing: 0.03em`\n\nexport const MovieRelase = styled.p`\nfont-size: 10px;\npadding: 0 30px;\nline-height: 1.17;\nletter-spacing: 0.03em\n`\nexport const MoviePoster = styled.img`\nwidth: 250px;\nmargin: 20px;`\n\nexport const LinksContainer = styled.div`\n  margin-top: 50px;\n  padding-left: 30px;\n`\nexport const StyledLink = styled(Link)`\ncolor: #415a77;\nfont-weight: 700;\ntext-decoration: none;\ntext-transform: uppercase;\ndisplay: block;\nmargin-bottom: 5px;`","import React, { useState, useEffect, Suspense } from 'react';\nimport axios from 'axios';\nimport { useParams, Route, Routes } from 'react-router-dom';\nimport { Cast } from '../Cast/Cast';\nimport { Reviews } from '../Reviews/Reviews';\nimport {\n  LinksContainer,\n  MovieDescription,\n  MovieDetailsContainer,\n  MovieDetailsInfo,\n  MoviePoster,\n  MovieRelase,\n  MovieTitle,\n  StyledLink,\n} from './MovieDetails.css';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}`,\n          {\n            params: {\n              api_key: 'ab4b5bd9c7ffd7f3aa53eea7788a929e',\n            },\n          }\n        );\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <MovieDetailsContainer>\n      <MovieDetailsInfo>\n        <MovieTitle>{movieDetails.title} </MovieTitle>\n        <MovieDescription>{movieDetails.overview}</MovieDescription>\n        <MovieRelase>Release Date: {movieDetails.release_date}</MovieRelase>\n        <LinksContainer>\n          <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n          <StyledLink to={`/movies/${movieId}/reviews`}>Reviews</StyledLink>\n        </LinksContainer>\n      </MovieDetailsInfo>\n      <MoviePoster\n        src={\n          movieDetails.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n            : defaultImg\n        }\n        width={250}\n        alt=\"poster\"\n      />\n\n      <Suspense fallback={<div>Loading cast...</div>}>\n        <Routes>\n          <Route path=\"/movies/:movieId/cast\" element={<Cast />} />\n        </Routes>\n      </Suspense>\n\n      <Suspense fallback={<div>Loading reviews...</div>}>\n        <Routes>\n          <Route path=\"/movies/:movieId/reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import styled from \"styled-components\";\n\nexport const ReviewsSheet = styled.li`\nborder: 5px`","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsSheet } from './Reviews.css';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n          {\n            params: {\n              api_key: 'ab4b5bd9c7ffd7f3aa53eea7788a929e',\n            },\n          }\n        );\n\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length === 0 ? (\n        <p>No reviews found.</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <ReviewsSheet key={review.id}>\n              {review.author} - {review.content}\n            </ReviewsSheet>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["CastActors","styled","_templateObject","_taggedTemplateLiteral","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","data","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","name","character","id","MovieDetailsContainer","MovieDetailsInfo","_templateObject2","MovieTitle","_templateObject3","MovieDescription","_templateObject4","MovieRelase","_templateObject5","MoviePoster","_templateObject6","LinksContainer","_templateObject7","StyledLink","Link","_templateObject8","movieDetails","setMovieDetails","getMovieDetails","title","overview","release_date","to","src","poster_path","width","alt","Suspense","fallback","Routes","Route","path","element","Reviews","ReviewsSheet","reviews","setReviews","getMovieReviews","results","length","review","author","content"],"sourceRoot":""}