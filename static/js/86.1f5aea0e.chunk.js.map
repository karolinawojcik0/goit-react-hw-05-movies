{"version":3,"file":"static/js/86.1f5aea0e.chunk.js","mappings":"oPAEaA,EAAS,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACvBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAWtB,OACEI,EAAAA,EAAAA,MAAA,QAAMC,SANa,SAAAC,GACnBA,EAAMC,iBACNV,EAASK,EACX,EAG+BM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,uBACZC,MAAOV,EACPW,SAfe,SAAAP,GACnBH,EAASG,EAAMQ,OAAOF,MACxB,KAeIH,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,aAG5B,ECWA,EAhCe,WACb,IAAAV,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CiB,EAAaf,EAAA,GAAEgB,EAAgBhB,EAAA,GAEhCiB,EAAkB,eAAArB,GAAAsB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMlB,GAAK,IAAAmB,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEXC,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAS,mCACTzB,MAAOA,KAGX,KAAD,EARKmB,EAAQC,EAAAM,KAUdZ,EAAiBK,EAASQ,KAAKC,SAASR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAExCU,QAAQC,MAAM,0BAAyBX,EAAAS,IAAS,yBAAAT,EAAAY,OAAA,GAAAd,EAAA,kBAEnD,gBAhBuBe,GAAA,OAAAvC,EAAAwC,MAAA,KAAAC,UAAA,KAkBxB,OACEjC,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAA9B,SAAA,EACEC,EAAAA,EAAAA,KAACd,EAAM,CAACE,SAAUoB,KAClBR,EAAAA,EAAAA,KAAA,MAAAD,SACGO,EAAcwB,KAAI,SAAAC,GAAK,OACtB/B,EAAAA,EAAAA,KAAA,MAAAD,SAAoBgC,EAAMC,OAAjBD,EAAME,GAAsB,QAK/C,C","sources":["components/Search/Search.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const Search = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSearch(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        value={query}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Search } from '../Search/Search';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchSubmit = async query => {\n    try {\n      const response = await axios.get(\n        'https://api.themoviedb.org/3/search/movie',\n        {\n          params: {\n            api_key: 'ab4b5bd9c7ffd7f3aa53eea7788a929e',\n            query: query,\n          },\n        }\n      );\n\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <>\n      <Search onSearch={handleSearchSubmit} />\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>{movie.title}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Search","_ref","onSearch","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","children","_jsx","type","placeholder","value","onChange","target","searchResults","setSearchResults","handleSearchSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","api_key","sent","data","results","t0","console","error","stop","_x","apply","arguments","_Fragment","map","movie","title","id"],"sourceRoot":""}